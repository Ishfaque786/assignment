{"version":3,"sources":["PostUI.js","App.js","reportWebVitals.js","index.js"],"names":["PostUI","props","className","index","post","postText","gifUrl","style","display","marginTop","alt","src","App","useState","gif","setGif","search","setSearch","query","setQuery","setpostText","selectedGif","setselectedGif","posts","setposts","getGifdata","useCallback","a","request","fetch","get","json","data","console","log","useEffect","window","addEventListener","event","gifSearchBox","document","getElementById","target","parentNode","onSubmit","preventDefault","postsTemp","push","type","required","placeholder","value","onChange","onClick","id","map","images","fixed_width","url","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iRAoBeA,MAlBf,SAAgBC,GACZ,OACI,sBAAKC,UAAU,UAAf,UACI,sBAAKA,UAAU,SAAf,kBACUD,EAAME,MAAM,KAGtB,sBAAKD,UAAU,WAAf,UACI,+BAAOD,EAAMG,KAAKC,WAEdJ,EAAMG,KAAKE,OAAO,qBAAKC,MAAO,CAACC,QAAQ,QAASC,UAAU,QAASC,IAAI,MAAMC,IAAKV,EAAMG,KAAKE,SAAe,+BCwFhHM,MA9FhB,WAEE,IAFa,EAISC,mBAAS,IAJlB,mBAINC,EAJM,KAIDC,EAJC,OAKeF,mBAAS,IALxB,mBAKNG,EALM,KAKEC,EALF,OAMaJ,mBAAS,YANtB,mBAMNK,EANM,KAMCC,EAND,OAOmBN,mBAAS,IAP5B,mBAONR,EAPM,KAOIe,EAPJ,OAQyBP,mBAAS,IARlC,mBAQNQ,EARM,KAQOC,EARP,OASaT,mBAAS,IATtB,mBASNU,EATM,KASCC,EATD,KAWPC,EAAaC,sBAAW,sBAAE,gCAAAC,EAAA,6DACxBC,EADwB,gDAC2BV,EAD3B,oBAThB,mCASgB,sBAEZW,MAAMD,GAFM,cAExBE,EAFwB,gBAGXA,EAAIC,OAHO,OAGxBC,EAHwB,OAI9BC,QAAQC,IAAIF,EAAKA,MACjBjB,EAAOiB,EAAKA,MALkB,2CAQ9B,CAACd,IAiCH,OAhCAiB,qBAAU,WACRC,OAAOC,iBAAiB,WAAU,SAASC,GACzC,IAAIC,EAAeC,SAASC,eAAe,gBACxCH,EAAMI,SAAWH,GAAgBD,EAAMI,OAAOC,aAAeJ,IAC9DA,EAAahC,MAAMC,QAAU,WAIjCiB,IACAQ,QAAQC,IAAIX,KACX,CAACE,EAAYF,EAAOL,IAuBrB,sBAAKhB,UAAU,MAAf,UAEE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACE,8CAIJ,uBAAM0C,SApBM,SAAAN,GACdA,EAAMO,iBACN,IAAIC,EAAYvB,EAChBuB,EAAUC,KAAK,CAAE,SAAY1C,EAAU,OAAUgB,IACjDG,EAASsB,GACT1B,EAAY,IACZE,EAAe,IACfkB,SAASC,eAAe,gBAAgBlC,MAAMC,QAAQ,QAa3BN,UAAU,cAAnC,UACE,uBAAOA,UAAU,YAAY8C,KAAK,OAAOC,UAAQ,EAACC,YAAY,uBAAuBC,MAAO9C,EAAU+C,SAxBrF,SAACd,GACtBlB,EAAYkB,EAAMI,OAAOS,UAwBpB9B,EAAY,qBAAKX,IAAI,MAAMC,IAAKU,IAAe,wBAChD,wBAAQnB,UAAU,YAAY8C,KAAK,SAASK,QAAS,WAAKb,SAASC,eAAe,gBAAgBlC,MAAMC,QAAQ,SAAhH,iBAEC,qBAAKN,UAAU,aAAf,SACG,wBAAQA,UAAU,aAAa8C,KAAK,SAApC,uBAGN,sBAAKM,GAAG,eAAe/C,MAAO,CAAEC,QAAS,QAAzC,UAEA,uBAAON,UAAU,aAAagD,YAAY,SAASF,KAAK,OAAOG,MAAOnC,EAAQoC,SAxC/D,SAAAd,GACnBrB,EAAUqB,EAAMI,OAAOS,OACvBhC,EAASH,MAyCP,qBAAKd,UAAU,sBAAf,SACHY,EAAIyC,KAAI,SAAAzC,GAAG,OACZ,qBAAKuC,QAAS,WAAK/B,EAAeR,EAAI0C,OAAOC,YAAYC,MAAOnD,MAAO,CAACC,QAAQ,QAASmD,OAAO,QAASjD,IAAI,SAASC,IAAKG,EAAI0C,OAAOC,YAAYC,iBAI5I,8BACKnC,EAAMgC,KAAI,SAACnD,EAAMD,GAAP,OACT,8BAEE,cAAC,EAAD,CAAQC,KAAMA,EAAMD,MAAOA,eC/E1ByD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,SAM1BmB,M","file":"static/js/main.4c8a4ef0.chunk.js","sourcesContent":["import React from 'react'\n\nfunction PostUI(props) {\n    return (\n        <div className=\"postBox\">\n            <div className=\"header\">\n                Post {props.index+1}\n\n            </div>\n            <div className=\"postBody\">\n                <text>{props.post.postText}</text>\n                {\n                    props.post.gifUrl?<img style={{display:'block', marginTop:'10px'}} alt=\"gif\" src={props.post.gifUrl}></img>:<div></div>\n             }\n            \n            </div>\n        </div>\n    )\n}\n\nexport default PostUI\n","// import logo from './logo.svg';\nimport './App.css';\n\nimport {React, useState, useEffect, useCallback} from 'react';\nimport PostUI from './PostUI';\n\nfunction App() {\n  // const APP_ID = \"af90f48f\";\n  const APP_KEY = 'gLD6KjIsQ32E00l1NWq9fjrpNNYgnIkH';\n\n  const [gif, setGif] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('tranding');\n  const [postText, setpostText] = useState('')\n  const [selectedGif, setselectedGif] = useState('')\n  const [posts, setposts] = useState([])\n  \n  const getGifdata = useCallback( async() => {\n    const request = `http://api.giphy.com/v1/gifs/search?q=${query}&api_key=${APP_KEY}&limit=10`;\n    const get = await fetch(request);\n    const data = await get.json();\n    console.log(data.data);\n    setGif(data.data);\n  \n  \n  },[query])\n  useEffect(() => {\n    window.addEventListener('mouseup',function(event){\n      var gifSearchBox = document.getElementById('gifSearchBox');\n      if(event.target !== gifSearchBox && event.target.parentNode !== gifSearchBox){\n        gifSearchBox.style.display = 'none';\n      }\n});  \n\n    getGifdata();\n    console.log(posts)\n  }, [getGifdata, posts, query]);\n\nconst updateSearch = event =>{\n  setSearch(event.target.value);\n  setQuery(search);\n\n};\n\n  const updatePostText = (event) => {\n    setpostText(event.target.value);\n  };\n  const addPost = event => {\n    event.preventDefault();\n    let postsTemp = posts\n    postsTemp.push({ \"postText\": postText, \"gifUrl\": selectedGif })\n    setposts(postsTemp)\n    setpostText('');\n    setselectedGif('');\n    document.getElementById('gifSearchBox').style.display='none'\n   \n}\n\n  return (\n    <div className=\"App\">\n      \n      <div className='postInputBox'>\n        <div className=\"postHeader\">\n          <text>\nAdd Post\n</text>\n      </div>\n      <form onSubmit={addPost} className=\"search-form\">\n        <input className=\"textInput\" type=\"text\" required placeholder=\"Write something here\" value={postText} onChange={updatePostText}></input>\n        {selectedGif?<img alt=\"gif\" src={selectedGif}/>:<div></div>}\n        <button className=\"gifButton\" type='button' onClick={()=>{document.getElementById('gifSearchBox').style.display='block'}} >GIF</button>\n        \n         <div className=\"postFooter\">\n            <button className='postButton' type=\"submit\">Post</button>\n          </div>\n          </form>\n      <div id=\"gifSearchBox\" style={{ display: \"none\"}}>\n      \n      <input className=\"search-bar\" placeholder=\"Search\" type=\"text\" value={search} onChange={updateSearch}></input>\n      \n    \n    <div className=\"row recipecontainer\" >\n{gif.map(gif =>(\n<img onClick={()=>{setselectedGif(gif.images.fixed_width.url)}} style={{display:'block', margin:'auto'}} alt=\"imager\" src={gif.images.fixed_width.url}/>))}\n        </div>\n        </div>\n        </div>\n      <div>\n          {posts.map((post, index) => (\n            <div>\n             \n              <PostUI post={post} index={index} />\n              </div>\n        ))}\n        </div>\n        \n    </div>\n  );\n}\n\nexport default  App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}